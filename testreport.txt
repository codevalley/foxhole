============================= test session starts =============================
platform win32 -- Python 3.12.5, pytest-7.4.0, pluggy-1.5.0
rootdir: C:\Users\narayan\Develop\foxhole
configfile: pytest.ini
plugins: anyio-3.7.1, asyncio-0.21.1
asyncio: mode=Mode.STRICT
collected 5 items

tests\test_main.py FFFFF                                                 [100%]

================================== FAILURES ===================================
_____________________________ test_register_user ______________________________

client = <async_generator object client at 0x00000144DABA45E0>
db_session = <async_generator object db_session at 0x00000144DAB95740>

    async def test_register_user(client: AsyncClient, db_session: AsyncSession):
>       response = await client.post(
            "/auth/register",
            json={"screen_name": "testuser"}
        )
E       AttributeError: 'async_generator' object has no attribute 'post'

tests\test_main.py:10: AttributeError
_________________________________ test_login __________________________________

client = <async_generator object client at 0x00000144DABA5B70>
db_session = <async_generator object db_session at 0x00000144DAB96B40>

    async def test_login(client: AsyncClient, db_session: AsyncSession):
>       user_id = await test_register_user(client, db_session)

tests\test_main.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

client = <async_generator object client at 0x00000144DABA5B70>
db_session = <async_generator object db_session at 0x00000144DAB96B40>

    async def test_register_user(client: AsyncClient, db_session: AsyncSession):
>       response = await client.post(
            "/auth/register",
            json={"screen_name": "testuser"}
        )
E       AttributeError: 'async_generator' object has no attribute 'post'

tests\test_main.py:10: AttributeError
____________________________ test_get_user_profile ____________________________

client = <async_generator object client at 0x00000144DABA5C60>
db_session = <async_generator object db_session at 0x00000144DAB97740>

    async def test_get_user_profile(client: AsyncClient, db_session: AsyncSession):
>       access_token = await test_login(client, db_session)

tests\test_main.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_main.py:27: in test_login
    user_id = await test_register_user(client, db_session)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

client = <async_generator object client at 0x00000144DABA5C60>
db_session = <async_generator object db_session at 0x00000144DAB97740>

    async def test_register_user(client: AsyncClient, db_session: AsyncSession):
>       response = await client.post(
            "/auth/register",
            json={"screen_name": "testuser"}
        )
E       AttributeError: 'async_generator' object has no attribute 'post'

tests\test_main.py:10: AttributeError
__________________________ test_update_user_profile ___________________________

client = <async_generator object client at 0x00000144DABA62F0>
db_session = <async_generator object db_session at 0x00000144DAB97E40>

    async def test_update_user_profile(client: AsyncClient, db_session: AsyncSession):
>       access_token = await test_login(client, db_session)

tests\test_main.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_main.py:27: in test_login
    user_id = await test_register_user(client, db_session)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

client = <async_generator object client at 0x00000144DABA62F0>
db_session = <async_generator object db_session at 0x00000144DAB97E40>

    async def test_register_user(client: AsyncClient, db_session: AsyncSession):
>       response = await client.post(
            "/auth/register",
            json={"screen_name": "testuser"}
        )
E       AttributeError: 'async_generator' object has no attribute 'post'

tests\test_main.py:10: AttributeError
______________________________ test_health_check ______________________________

client = <async_generator object client at 0x00000144DABA6A70>

    async def test_health_check(client: AsyncClient):
>       response = await client.get("/health")
E       AttributeError: 'async_generator' object has no attribute 'get'

tests\test_main.py:71: AttributeError
============================== warnings summary ===============================
.venv\Lib\site-packages\pydantic\_internal\_config.py:267
.venv\Lib\site-packages\pydantic\_internal\_config.py:267
  c:\Users\narayan\Develop\foxhole\.venv\Lib\site-packages\pydantic\_internal\_config.py:267: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.4/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

.venv\Lib\site-packages\pydantic\_internal\_config.py:317
  c:\Users\narayan\Develop\foxhole\.venv\Lib\site-packages\pydantic\_internal\_config.py:317: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/test_main.py::test_register_user - AttributeError: 'async_genera...
FAILED tests/test_main.py::test_login - AttributeError: 'async_generator' obj...
FAILED tests/test_main.py::test_get_user_profile - AttributeError: 'async_gen...
FAILED tests/test_main.py::test_update_user_profile - AttributeError: 'async_...
FAILED tests/test_main.py::test_health_check - AttributeError: 'async_generat...
======================== 5 failed, 3 warnings in 0.31s ========================
