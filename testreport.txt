============================= test session starts =============================
platform win32 -- Python 3.12.5, pytest-7.4.0, pluggy-1.5.0 -- c:\Users\narayan\Develop\foxhole\.venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\narayan\Develop\foxhole
configfile: pytest.ini
plugins: anyio-3.7.1, asyncio-0.21.1
asyncio: mode=Mode.AUTO
collecting ... collected 26 items

tests/test_auth.py::test_register_user PASSED                            [  3%]
tests/test_auth.py::test_login PASSED                                    [  7%]
tests/test_auth.py::test_get_current_user PASSED                         [ 11%]
tests/test_auth.py::test_update_user_profile PASSED                      [ 15%]
tests/test_auth.py::test_invalid_token PASSED                            [ 19%]
tests/test_auth.py::test_missing_token PASSED                            [ 23%]
tests/test_auth.py::test_create_access_token PASSED                      [ 26%]
tests/test_auth.py::test_login_for_access_token_invalid_user PASSED      [ 30%]
tests/test_auth.py::test_get_current_user_invalid_token PASSED           [ 34%]
tests/test_auth.py::test_update_user_profile_no_changes PASSED           [ 38%]
tests/test_files.py::test_upload_file PASSED                             [ 42%]
tests/test_files.py::test_get_file_url PASSED                            [ 46%]
tests/test_files.py::test_get_file_url_not_found PASSED                  [ 50%]
tests/test_files.py::test_list_files PASSED                              [ 53%]
tests/test_health.py::test_health_check PASSED                           [ 57%]
tests/test_main.py::test_register_user PASSED                            [ 61%]
tests/test_main.py::test_login PASSED                                    [ 65%]
tests/test_main.py::test_get_user_profile PASSED                         [ 69%]
tests/test_main.py::test_update_user_profile PASSED                      [ 73%]
tests/test_main.py::test_health_check PASSED                             [ 76%]
tests/test_websocket.py::test_websocket_connection PASSED                [ 80%]
tests/test_websocket.py::test_websocket_multiple_messages PASSED         [ 84%]
tests/test_websocket.py::test_websocket_broadcast FAILED                 [ 88%]
tests/test_websocket.py::test_websocket_disconnect PASSED                [ 92%]
tests/test_websocket.py::test_websocket_unauthorized PASSED              [ 96%]
tests/test_websocket.py::test_websocket_invalid_token PASSED             [100%]

================================== FAILURES ===================================
__________________________ test_websocket_broadcast ___________________________

test_client = <starlette.testclient.TestClient object at 0x0000015DD59A2B70>
token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0X3VzZXJfaWQiLCJleHAiOjE3MjU4NTczNzd9.EyUh9nt4UZy3A2rPJuOD1ZCHnMMsjXiRxcGnha93SUc'
websocket_manager = <app.services.websocket_manager.WebSocketManager object at 0x0000015DD58E5850>

    @pytest.mark.asyncio
    async def test_websocket_broadcast(
        test_client: TestClient, token: str, websocket_manager: WebSocketManager
    ) -> None:
        async def connect_and_receive(ws_client):
            async with ws_client.websocket_connect(f"/ws?token={token}") as websocket:
                yield websocket

        async with asyncio.timeout(5):  # 5 seconds timeout
            ws1_gen = connect_and_receive(test_client)
            ws2_gen = connect_and_receive(test_client)

>           websocket1 = await anext(ws1_gen)

tests\test_websocket.py:63:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

ws_client = <starlette.testclient.TestClient object at 0x0000015DD59A2B70>

    async def connect_and_receive(ws_client):
>       async with ws_client.websocket_connect(f"/ws?token={token}") as websocket:
E       TypeError: 'WebSocketTestSession' object does not support the asynchronous context manager protocol

tests\test_websocket.py:56: TypeError
---------------------------- Captured stdout setup ----------------------------
2024-09-09 09:49:37,423 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-09-09 09:49:37,423 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2024-09-09 09:49:37,423 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-09-09 09:49:37,423 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("users")
2024-09-09 09:49:37,423 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-09-09 09:49:37,424 INFO sqlalchemy.engine.Engine
CREATE TABLE users (
	id VARCHAR NOT NULL,
	screen_name VARCHAR,
	PRIMARY KEY (id)
)


2024-09-09 09:49:37,424 INFO sqlalchemy.engine.Engine [no key 0.00010s] ()
2024-09-09 09:49:37,424 INFO sqlalchemy.engine.Engine CREATE INDEX ix_users_id ON users (id)
2024-09-09 09:49:37,425 INFO sqlalchemy.engine.Engine [no key 0.00009s] ()
2024-09-09 09:49:37,425 INFO sqlalchemy.engine.Engine CREATE INDEX ix_users_screen_name ON users (screen_name)
2024-09-09 09:49:37,425 INFO sqlalchemy.engine.Engine [no key 0.00009s] ()
2024-09-09 09:49:37,425 INFO sqlalchemy.engine.Engine COMMIT
2024-09-09 09:49:37,426 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-09-09 09:49:37,426 INFO sqlalchemy.engine.Engine INSERT INTO users (id, screen_name) VALUES (?, ?)
2024-09-09 09:49:37,426 INFO sqlalchemy.engine.Engine [cached since 0.5458s ago] ('test_user_id', 'testuser')
2024-09-09 09:49:37,427 INFO sqlalchemy.engine.Engine COMMIT
----------------------------- Captured log setup ------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2685 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1844 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1844 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1844 PRAGMA temp.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1844 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1844
CREATE TABLE users (
	id VARCHAR NOT NULL,
	screen_name VARCHAR,
	PRIMARY KEY (id)
)


INFO     sqlalchemy.engine.Engine:base.py:1844 [no key 0.00010s] ()
INFO     sqlalchemy.engine.Engine:base.py:1844 CREATE INDEX ix_users_id ON users (id)
INFO     sqlalchemy.engine.Engine:base.py:1844 [no key 0.00009s] ()
INFO     sqlalchemy.engine.Engine:base.py:1844 CREATE INDEX ix_users_screen_name ON users (screen_name)
INFO     sqlalchemy.engine.Engine:base.py:1844 [no key 0.00009s] ()
INFO     sqlalchemy.engine.Engine:base.py:2691 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2685 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1844 INSERT INTO users (id, screen_name) VALUES (?, ?)
INFO     sqlalchemy.engine.Engine:base.py:1844 [cached since 0.5458s ago] ('test_user_id', 'testuser')
INFO     sqlalchemy.engine.Engine:base.py:2691 COMMIT
-------------------------- Captured stdout teardown ---------------------------
2024-09-09 09:49:37,670 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-09-09 09:49:37,670 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2024-09-09 09:49:37,670 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-09-09 09:49:37,671 INFO sqlalchemy.engine.Engine
DROP TABLE users
2024-09-09 09:49:37,671 INFO sqlalchemy.engine.Engine [no key 0.00012s] ()
2024-09-09 09:49:37,672 INFO sqlalchemy.engine.Engine COMMIT
---------------------------- Captured log teardown ----------------------------
INFO     sqlalchemy.engine.Engine:base.py:2685 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1844 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1844 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1844
DROP TABLE users
INFO     sqlalchemy.engine.Engine:base.py:1844 [no key 0.00012s] ()
INFO     sqlalchemy.engine.Engine:base.py:2691 COMMIT
============================== warnings summary ===============================
.venv\Lib\site-packages\pydantic\_internal\_config.py:267
.venv\Lib\site-packages\pydantic\_internal\_config.py:267
  c:\Users\narayan\Develop\foxhole\.venv\Lib\site-packages\pydantic\_internal\_config.py:267: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.4/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

tests/test_auth.py::test_get_current_user
tests/test_auth.py::test_update_user_profile
tests/test_auth.py::test_update_user_profile_no_changes
tests/test_main.py::test_get_user_profile
tests/test_main.py::test_update_user_profile
tests/test_websocket.py::test_websocket_connection
tests/test_websocket.py::test_websocket_multiple_messages
tests/test_websocket.py::test_websocket_disconnect
  c:\Users\narayan\Develop\foxhole\.venv\Lib\site-packages\jose\jwt.py:311: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    now = timegm(datetime.utcnow().utctimetuple())

tests/test_auth.py::test_create_access_token
  tests\test_auth.py:106: PytestWarning: The test <Function test_create_access_token> is marked with '@pytest.mark.asyncio' but it is not an async function. Please remove asyncio marker. If the test is not marked explicitly, check for global markers applied via 'pytestmark'.
    def test_create_access_token() -> None:

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/test_websocket.py::test_websocket_broadcast - TypeError: 'WebSoc...
================== 1 failed, 25 passed, 11 warnings in 1.00s ==================
